#!/usr/bin/with-contenv bash
set -e

vecho () { if [ "${S6_VERBOSITY:-1}" -gt 0 ]; then echo "[$0] $@"; fi; }

ROOTDIR="${ROOTDIR:-/config}";
KEYDIR="${KEYDIR:-$ROOTDIR/keys}";
PKEYFILE="${PKEYFILE:-$KEYDIR/private.key}";
CERTFILE="${CERTFILE:-$KEYDIR/certificate.crt}";
HTPASSWDFILE="${HTPASSWDFILE:-$KEYDIR/.htpasswd}";
NGINXDIR="${NGINXDIR:-$ROOTDIR/nginx}";
CONFSDIR="${CONFSDIR:-$NGINXDIR/conf.d}";
SITESDIR="${SITESDIR:-$NGINXDIR/http.d}";
STREAMSDIR="${STREAMSDIR:-$NGINXDIR/stream.d}";
WEBDIR="${WEBDIR:-$ROOTDIR/www}";

NGINX_FASTCGI_PARAMSFILE="${NGINX_FASTCGI_PARAMSFILE:-/etc/nginx/fastcgi_params}";

# make our folders
vecho "Ensure configuration directories exist.";
mkdir -p \
    $KEYDIR \
    $CONFSDIR \
    $SITESDIR \
    $STREAMSDIR \
    $WEBDIR \
    /var/lib/nginx/tmp/client_body \
    /var/tmp/nginx;

# function to substitute paths in config files
_subst () {
    sed \
    -e "s|S6_USER|$S6_USER|g" \
    -e "s|NGINXDIR|$NGINXDIR|g" \
    -e "s|CONFSDIR|$CONFSDIR|g" \
    -e "s|SITESDIR|$SITESDIR|g" \
    -e "s|STREAMSDIR|$STREAMSDIR|g" \
    -e "s|WEBDIR|$WEBDIR|g" \
    -e "s|HTPASSWDFILE|$HTPASSWDFILE|g" \
    -e "s|CERTFILE|$CERTFILE|g" \
    -e "s|PKEYFILE|$PKEYFILE|g" \
    -e "s|NGINX_FASTCGI_PARAMSFILE|$NGINX_FASTCGI_PARAMSFILE|g" \
    $1 > $2;
}

# copy config files
if [ ! -f "$NGINXDIR/nginx.conf" ];
then
    vecho "Setting up /defaults/nginx.conf as $NGINXDIR/nginx.conf";
    _subst /defaults/nginx.conf $NGINXDIR/nginx.conf;
fi;

# provide default site-confs if none exist, as a starting point
if [ $(find $SITESDIR -type f | wc -l) -eq 0 ];
then
    vecho "$SITESDIR has no default site configured.";
    if [ -z "${NGINX_NO_HTTP}" ]; # set to 'true' if http not needed
    then
        vecho "Setting up /defaults/default_http as $SITESDIR/http";
        _subst /defaults/default_http $SITESDIR/http;
    fi;
    if [ -z "${NGINX_NO_HTTPS}" ]; # set to 'true' if https not needed
    then
        vecho "Setting up /defaults/default_https as $SITESDIR/https";
        _subst /defaults/default_https $SITESDIR/https;
    fi;
fi;

if [ -z "${NGINX_SKIP_FASTCGI_PARAM}" ] \
&& [ -f "${NGINX_FASTCGI_PARAMSFILE}" ];
then
    vecho "Adding fastcgi_param configuration in ${NGINX_FASTCGI_PARAMSFILE}";
    echo 'fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> ${NGINX_FASTCGI_PARAMSFILE};
fi;

# fix permissions
if [ -z "${NGINX_SKIP_PERMFIX}" ]; # may set to 'true' for if configurations are mounted read-only
then
    vecho "Fixing permissions.";
    chown \
        ${S6_USER:-alpine}:${PGID:-1000} \
        $ROOTDIR \
        $KEYDIR \
        $WEBDIR \
        ;
    chown -R \
        ${S6_USER:-alpine}:${PGID:-1000} \
        $NGINXDIR \
        /var/lib/nginx \
        /var/tmp/nginx \
        ;
fi;
